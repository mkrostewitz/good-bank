{"ast":null,"code":"import _slicedToArray from \"/Users/mathias/repos-mkrostewitz/bad-bank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mathias/repos-mkrostewitz/bad-bank/src/Context/context.js\";\nimport React from 'react';\nvar UserContext = React.createContext(null);\nvar AuthStatus = React.createContext(null);\nvar Consumer = AuthStatus.Consumer;\n\nfunction FormBody(props) {\n  function classes() {\n    var bg = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\n    var txt = props.txtcolor ? ' text-' + props.txtcolor : ' text-white';\n    return 'card mb-3 ' + bg + txt;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"createAccountForm\",\n    className: \"col d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes(),\n    style: {\n      maxWidth: \"18rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.header), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, props.title && /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 34\n    }\n  }, props.title), props.text && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }, props.text), props.body, props.status && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"createStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 35\n    }\n  }, props.status))));\n}\n\nfunction Form(props) {\n  function classes() {\n    var bg = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\n    var txt = props.txtcolor ? ' text-' + props.txt.color : ' text-body';\n    return 'mb-3 ' + bg + txt;\n  }\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      show = _React$useState2[0],\n      setShow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      status = _React$useState4[0],\n      setStatus = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      name = _React$useState6[0],\n      setName = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      email = _React$useState8[0],\n      setEmail = _React$useState8[1];\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      amount = _React$useState10[0],\n      setAmount = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      password = _React$useState12[0],\n      setPassword = _React$useState12[1];\n\n  var ctx = React.useContext(UserContext);\n  var auth = React.useContext(AuthStatus);\n  var FormName = !props.showFormName ? false : true;\n  var FormEmail = !props.showFormEmail ? false : true;\n  var FormPassword = !props.showFormPassword ? false : true;\n  var FormAmount = !props.showFormAmount ? false : true;\n  var FormBalance = !props.showFormBalance ? false : true; //Clear Form\n\n  function clearForm() {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setAmount('');\n    setShow(true);\n  }\n\n  ; //Disbable Login and Create Account Button\n\n  function success(label, field) {\n    if (FormName && name === \"\" || FormEmail && email === \"\" || FormPassword && password === \"\") {\n      document.getElementById('button').disabled = true;\n    } else {\n      document.getElementById('button').disabled = false;\n    }\n\n    ;\n  } //validateForm\n\n\n  function validateForm(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label + 'missing.');\n      setTimeout(function () {\n        return setStatus('');\n      }, 3000);\n      return false;\n    } // verify that the password has at least 8 characters\n\n\n    if (label === 'password') {\n      if (field.length < 8) {\n        setStatus('Error: ' + label + 'Your Password must contain of at least 8 characters.');\n        return false;\n      }\n\n      ;\n      return true;\n    }\n\n    return true;\n  } //create new user account\n\n\n  function createUser(name, email, password) {\n    ctx.users.push({\n      name: name,\n      email: email,\n      password: password,\n      balance: 100\n    });\n    setStatus(\"Success: Congratulations \".concat(name, \". Your account was successfully created\"));\n  } //Validate that user exists when logging in\n\n\n  function validateUser(user, password, label) {\n    for (var i = 0; i < ctx.users.length; i++) {\n      if (ctx.users[i].email == user) {\n        // user was found\n        // verify user password\n        if (ctx.users[i].password == password) {\n          ctx.account = [{\n            name: ctx.users[i].name,\n            email: ctx.users[i].email,\n            balance: ctx.users[i].balance\n          }];\n          setStatus(\"Success: Welcome \".concat(name, \"! You can deposit or withdraw money from your account.\"));\n          return true;\n        } else {\n          setStatus('Error:' + label + ' password incorrect.');\n          return false;\n        }\n      }\n    }\n\n    ; // user was not found\n\n    setStatus('Error:' + label + ' not found.');\n    return false;\n  } //deposit amount to user account\n\n\n  function depositAmount(user, amount, label) {\n    ctx.account[0].balance += parseInt(amount);\n    var newBalance = ctx.account[0].balance;\n\n    for (var i = 0; i < ctx.users.length; i++) {\n      if (ctx.users[i].email == user) {\n        // update user balance \n        ctx.users[i].balance += parseInt(amount); //record transaction\n\n        recordTransaction(label, amount, newBalance);\n        setStatus(\"Success: Successfully added \".concat(amount, \" to your account. You new balance is \").concat(newBalance));\n        return true;\n      }\n    }\n\n    ; // user was not found\n\n    setStatus('Error: User not found, register for an account first.');\n    return false;\n  } //widthdraw amount from user account\n\n\n  function widthdrawAmount(user, amount, label) {\n    var currentBalance = ctx.account[0].balance;\n    var newBalance = ctx.account[0].balance - parseInt(amount);\n\n    if (newBalance >= 0) {\n      ctx.account[0].balance -= amount;\n\n      for (var i = 0; i < ctx.users.length; i++) {\n        if (ctx.users[i].email == user) {\n          // update user balance \n          ctx.users[i].balance -= amount; //record transaction\n\n          recordTransaction(label, amount, newBalance); // set form status\n\n          setStatus(\"Success: Successfully withdrew \".concat(amount, \" $ from your account. Your new balance is \").concat(newBalance, \" $.\"));\n          return true;\n        }\n      }\n\n      ; // user was not found\n\n      setStatus('Error: User not found, register for an account first.');\n      return false;\n    } else {\n      setStatus(\"Error: Insufficient balance! The withdrawal amount of \".concat(amount, \" exceeds your current balance of \").concat(currentBalance, \" $.\"));\n      return false;\n    }\n  }\n\n  function recordTransaction(label, amount, newBalance) {\n    //record transaction\n    var date = new Date();\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = date.getFullYear();\n    date = mm + '/' + dd + '/' + yyyy;\n    var id = ctx.transactions.length + 1;\n    ctx.transactions.push({\n      id: id,\n      date: date,\n      label: label,\n      amount: amount,\n      newBalance: newBalance\n    });\n  }\n\n  function handleSubmit(action) {\n    //handle create account\n    if (action === \"accCreate\") {\n      console.log(name, email, password);\n      if (!validateForm(name, 'name')) return;\n      if (!validateForm(email, 'email')) return;\n      if (!validateForm(password, 'password')) return;\n      createUser(name, email, password);\n      setShow(false);\n    } //handle login\n\n\n    if (action === 'accLogin') {\n      console.log(email, password);\n      if (!validateForm(email, 'Email')) return;\n      if (!validateForm(password, 'Password')) return;\n      if (!validateUser(email, password, 'User')) return;\n      auth.LoginStatus = true;\n      setShow(false);\n    } //handle deposit\n\n\n    if (action === 'accDeposit') {\n      var user = ctx.account[0].email;\n      console.log(amount);\n      if (!user) return setStatus('Error: It seems like you are not logged in yet! Log in to your account first');\n      if (!validateForm(amount, 'Amount')) return;\n      if (!depositAmount(user, amount, 'Deposit')) return;\n      setShow(false);\n    } //handle widthdraw\n\n\n    if (action === 'accWithdraw') {\n      var _user = ctx.account[0].email;\n      console.log(amount);\n      if (!_user) return setStatus('Error: It seems like you are not logged in yet! Log in to your account first');\n      if (!validateForm(amount, 'Amount')) return;\n      if (!widthdrawAmount(_user, amount, 'Withdrawal')) return;\n      setShow(false);\n    }\n  }\n\n  return show ? /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, FormName && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"required\",\n    className: classes(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"form-label text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    className: \"form-control\",\n    id: \"name\",\n    placeholder: \"Enter Name\",\n    value: name,\n    onBlur: function onBlur(e) {\n      return success('name', props.buttonAction, e.currentTarget.value);\n    },\n    onChange: function onChange(e) {\n      return setName(e.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  })), FormEmail && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"required\",\n    className: classes(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"form-label text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    className: \"form-control\",\n    id: \"email\",\n    placeholder: \"Enter Email\",\n    value: email,\n    onBlur: function onBlur(e) {\n      return success('email', props.buttonAction, e.currentTarget.value);\n    },\n    onChange: function onChange(e) {\n      return setEmail(e.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  })), FormPassword && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"required\",\n    className: classes(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"form-label text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    className: \"form-control\",\n    id: \"password\",\n    placeholder: \"Enter Password\",\n    value: password,\n    onBlur: function onBlur(e) {\n      return success('password', props.buttonAction, e.currentTarget.value);\n    },\n    onChange: function onChange(e) {\n      return setPassword(e.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 18\n    }\n  })), FormAmount && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"props.buttonLabel\",\n    className: \"form-text text-white fs-6 text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, \"Balance: \", JSON.stringify(ctx.account[0].balance)), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.buttonLabel,\n    className: \"form-label text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, props.buttonLabel), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    className: \"form-control\",\n    id: props.buttonLabel,\n    placeholder: \"Enter Amount\",\n    value: amount,\n    onChange: function onChange(e) {\n      return setAmount(e.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  })), FormBalance && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"Hi \", ctx.account[0].name, \"!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, \"Your current account Balance is \", JSON.stringify(ctx.account[0].balance))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"button\",\n    className: \"btn btn-light\",\n    onClick: function onClick(e) {\n      return handleSubmit(props.buttonAction);\n    },\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, props.buttonLabel), status.includes(\"Error\") && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"status\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 42\n    }\n  }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Success\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-light\",\n    onClick: clearForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, props.successButton), status.includes(\"Success\") && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"status\",\n    className: \"form-text text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 44\n    }\n  }, status));\n}\n\nfunction UnAuthMessage(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, \"You are currently not logged in!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, \"Please login or register for an account first...\"));\n}\n\nexport { UserContext, AuthStatus, Consumer, FormBody, Form, UnAuthMessage };","map":{"version":3,"names":["React","UserContext","createContext","AuthStatus","Consumer","FormBody","props","classes","bg","bgcolor","txt","txtcolor","maxWidth","header","title","text","body","status","Form","color","useState","show","setShow","setStatus","name","setName","email","setEmail","amount","setAmount","password","setPassword","ctx","useContext","auth","FormName","showFormName","FormEmail","showFormEmail","FormPassword","showFormPassword","FormAmount","showFormAmount","FormBalance","showFormBalance","clearForm","success","label","field","document","getElementById","disabled","validateForm","setTimeout","length","createUser","users","push","balance","validateUser","user","i","account","depositAmount","parseInt","newBalance","recordTransaction","widthdrawAmount","currentBalance","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","id","transactions","handleSubmit","action","console","log","LoginStatus","e","buttonAction","currentTarget","value","JSON","stringify","buttonLabel","includes","successButton","UnAuthMessage"],"sources":["/Users/mathias/repos-mkrostewitz/bad-bank/src/Context/context.js"],"sourcesContent":["import React from 'react';\nconst UserContext = React.createContext(null);\nconst AuthStatus = React.createContext(null);\nconst Consumer = AuthStatus.Consumer;\n\nfunction FormBody(props){\n    function classes() {\n        const bg = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\n        const txt = props.txtcolor ? ' text-' + props.txtcolor : ' text-white';\n        return 'card mb-3 ' + bg + txt;\n    }\n\n    return(\n        <div id=\"createAccountForm\" className=\"col d-flex justify-content-center\">\n            <div className={classes()} style={{maxWidth: \"18rem\"}}>\n            <div className=\"card-header\">{props.header}</div>\n            <div className=\"card-body\">\n                {props.title && (<h5 className=\"card-title\">{props.title}</h5>)}\n                {props.text && (<p className=\"card-text\">{props.text}</p>)}\n                {props.body}\n                {props.status && (<div id=\"createStatus\">{props.status}</div>)}\n            </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Form(props) {\n    function classes() {\n        const bg = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\n        const txt = props.txtcolor ? ' text-' + props.txt.color : ' text-body';\n        return 'mb-3 ' + bg + txt;\n    }\n\n    const [show, setShow]       = React.useState(true);\n    const [status, setStatus]   = React.useState('');\n    const [name, setName]       = React.useState('');\n    const [email, setEmail]       = React.useState('');\n    const [amount, setAmount]     = React.useState(0);\n    const [password, setPassword]       = React.useState('');\n    const ctx = React.useContext(UserContext);\n    const auth = React.useContext(AuthStatus);\n\n    const FormName = !props.showFormName ? false : true;\n    const FormEmail = !props.showFormEmail ? false : true;\n    const FormPassword = !props.showFormPassword ? false : true;\n    const FormAmount = !props.showFormAmount ? false : true;\n    const FormBalance = !props.showFormBalance ? false : true;\n\n    //Clear Form\n    function clearForm() {\n        setName('');\n        setEmail('');\n        setPassword('');\n        setAmount('');\n        setShow(true);\n    };\n\n    //Disbable Login and Create Account Button\n    function success(label, field) {\n\n        if((FormName && name === \"\") || (FormEmail && email === \"\") || (FormPassword && password === \"\")) { \n               document.getElementById('button').disabled = true; \n           } else { \n                document.getElementById('button').disabled = false;\n        };\n       }\n\n    //validateForm\n    function validateForm(field, label) {\n        if (!field) {\n            setStatus('Error: ' + label + 'missing.');\n            setTimeout(() => setStatus(''), 3000);\n            return false;\n        }\n        // verify that the password has at least 8 characters\n        if (label === 'password') {\n            if (field.length < 8 ) {\n                setStatus('Error: ' + label + 'Your Password must contain of at least 8 characters.');\n                return false;\n            };\n            return true\n        }\n        return true\n    }\n\n    //create new user account\n    function createUser(name, email, password) {\n        ctx.users.push({name, email, password, balance:100});\n        setStatus(`Success: Congratulations ${name}. Your account was successfully created`);\n    }\n\n    //Validate that user exists when logging in\n    function validateUser(user, password, label) {\n        for (let i = 0; i < ctx.users.length; i++) {\n            if ( ctx.users[i].email == user){\n                // user was found\n\n                // verify user password\n                if (ctx.users[i].password == password) {\n                    ctx.account = [{name: ctx.users[i].name, email: ctx.users[i].email, balance: ctx.users[i].balance }];\n                    setStatus(`Success: Welcome ${name}! You can deposit or withdraw money from your account.`);\n                    return true;\n                } else {\n                    setStatus('Error:' + label + ' password incorrect.');\n                    return false;\n                }\n            }\n        };\n        // user was not found\n        setStatus('Error:' + label + ' not found.')\n        return false\n    }\n\n    //deposit amount to user account\n    function depositAmount(user, amount, label) {\n        ctx.account[0].balance += parseInt(amount);\n        let newBalance = ctx.account[0].balance ;\n\n\n        for (let i = 0; i < ctx.users.length; i++) {\n            if ( ctx.users[i].email == user){\n                // update user balance \n                ctx.users[i].balance += parseInt(amount);\n\n                //record transaction\n                recordTransaction(label, amount, newBalance);\n\n                setStatus(`Success: Successfully added ${amount} to your account. You new balance is ${newBalance}`);\n                return true;\n                } \n            };\n        // user was not found\n        setStatus('Error: User not found, register for an account first.');\n        return false;\n    }\n\n     //widthdraw amount from user account\n     function widthdrawAmount(user, amount, label) {\n        let currentBalance = ctx.account[0].balance\n        let newBalance = ctx.account[0].balance - parseInt(amount);\n\n        if(newBalance >= 0 ) {\n            ctx.account[0].balance -= amount;\n\n            for (let i = 0; i < ctx.users.length; i++) {\n                if ( ctx.users[i].email == user){\n                    // update user balance \n                    ctx.users[i].balance -= amount;\n\n                    //record transaction\n                    recordTransaction(label, amount, newBalance)\n\n                    // set form status\n                    setStatus(`Success: Successfully withdrew ${amount} $ from your account. Your new balance is ${newBalance} $.`);\n                    return true;\n                    } \n                };\n        // user was not found\n        setStatus('Error: User not found, register for an account first.');\n        return false;\n        } else {\n            setStatus(`Error: Insufficient balance! The withdrawal amount of ${amount} exceeds your current balance of ${currentBalance} $.`);\n            return false;\n        }\n    }\n\n    function recordTransaction(label, amount, newBalance) {\n        //record transaction\n        var date = new Date();\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = date.getFullYear();\n        \n        date = mm + '/' + dd + '/' + yyyy;\n\n        var id = ctx.transactions.length + 1;\n        ctx.transactions.push({id, date, label, amount, newBalance});\n    }\n\n    function handleSubmit(action) {\n\n        //handle create account\n        if (action === \"accCreate\") { \n                console.log(name, email, password);\n                if (!validateForm(name, 'name')) return;\n                if (!validateForm(email, 'email')) return;\n                if (!validateForm(password, 'password')) return;\n                createUser(name, email, password);\n                setShow(false);\n        }\n\n        //handle login\n        if (action === 'accLogin') { \n                console.log(email, password);\n                if (!validateForm(email, 'Email')) return;\n                if (!validateForm(password, 'Password')) return;\n                if (!validateUser(email, password, 'User')) return;                \n                auth.LoginStatus = true;\n                setShow(false);\n        }\n\n        //handle deposit\n        if (action === 'accDeposit') {\n            const user = ctx.account[0].email;\n\n            console.log(amount);\n            if(!user) return setStatus('Error: It seems like you are not logged in yet! Log in to your account first')\n            if (!validateForm(amount, 'Amount')) return;\n            if (!depositAmount(user, amount, 'Deposit')) return;\n            setShow(false);\n        }\n\n        //handle widthdraw\n        if (action ==='accWithdraw') {\n            const user = ctx.account[0].email;\n\n            console.log(amount);\n            if(!user) return setStatus('Error: It seems like you are not logged in yet! Log in to your account first')\n            if (!validateForm(amount, 'Amount')) return;\n            if (!widthdrawAmount(user, amount, 'Withdrawal')) return;\n            setShow(false);\n        }\n\n    \n    }\n\n    return(\n        show ? (\n            <form>\n\n            {FormName && \n            <div id=\"required\" className={classes()}>\n                <label htmlFor=\"name\" className=\"form-label text-white\">Name</label>\n                <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter Name\" value={name} onBlur={e => success('name', props.buttonAction, e.currentTarget.value)} onChange={e => setName(e.currentTarget.value)} />\n            </div>\n            }\n\n            {FormEmail && \n            <div id=\"required\" className={classes()}>\n                <label htmlFor=\"email\" className=\"form-label text-white\">Email</label>\n                <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email\" value={email} onBlur={e => success('email', props.buttonAction, e.currentTarget.value)}  onChange={e => setEmail(e.currentTarget.value)} />\n            </div>\n            }\n\n            {FormPassword && \n            <div id=\"required\" className={classes()}>\n                <label htmlFor=\"password\" className=\"form-label text-white\">Password</label>\n                 <input type=\"input\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" value={password} onBlur={e => success('password', props.buttonAction, e.currentTarget.value)}  onChange={e => setPassword(e.currentTarget.value)} />\n            </div>\n            }\n\n            {FormAmount &&\n            <div className={classes()}>\n                <div id=\"props.buttonLabel\" className=\"form-text text-white fs-6 text\">Balance: {JSON.stringify(ctx.account[0].balance)}</div>\n                <label htmlFor={props.buttonLabel} className=\"form-label text-white\">{props.buttonLabel}</label>\n                <input type=\"input\" className=\"form-control\" id={props.buttonLabel} placeholder=\"Enter Amount\" value={amount} onChange={e => setAmount(e.currentTarget.value)} />\n            </div>\n            }\n\n            {FormBalance &&\n                <div className={classes()}>\n                <h3>Hi {ctx.account[0].name}!</h3> \n                <p>Your current account Balance is {JSON.stringify(ctx.account[0].balance)}</p>\n                </div>\n            }\n\n            <button type=\"submit\" id=\"button\" className=\"btn btn-light\" onClick={e => handleSubmit(props.buttonAction)} disabled>{props.buttonLabel}</button>\n            {status.includes(\"Error\") && <div id=\"status\" className=\"form-text text-danger\">{status}</div>}\n            </form>\n            \n            ):(\n\n            <div>\n            <h5>Success</h5>\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>{props.successButton}</button>\n            {status.includes(\"Success\") && <div id=\"status\" className=\"form-text text-white\">{status}</div>}\n            </div>    \n            )\n\n\n    )\n}\n\nfunction UnAuthMessage(props) {\n    return (\n        <div className=\"container\">\n        <h1>You are currently not logged in!</h1><br/>\n        <p>Please login or register for an account first...</p>\n        </div>\n    )\n}\n\nexport { UserContext, AuthStatus, Consumer, FormBody, Form, UnAuthMessage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}